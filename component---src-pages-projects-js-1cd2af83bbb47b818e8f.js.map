{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/images/whaleSightingsMap.png","webpack:///./src/images/whosOnWhat.jpg","webpack:///./src/images/codePenProjects.jpg"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_images_whaleSightingsMap_png__WEBPACK_IMPORTED_MODULE_3__","_images_whaleSightingsMap_png__WEBPACK_IMPORTED_MODULE_3___default","_images_whosOnWhat_jpg__WEBPACK_IMPORTED_MODULE_4__","_images_whosOnWhat_jpg__WEBPACK_IMPORTED_MODULE_4___default","_images_codePenProjects_jpg__WEBPACK_IMPORTED_MODULE_5__","_images_codePenProjects_jpg__WEBPACK_IMPORTED_MODULE_5___default","Projects","a","createElement","Fragment","title","id","class","src","whaleSightingsMap","alt","href","target","rel","whosOnWhat","codePenProjects","to","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","p"],"mappings":"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","file":"component---src-pages-projects-js-1cd2af83bbb47b818e8f.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\n// import Layout from \"../components/layout\"  Later you should add this\r\nimport SEO from \"../components/seo\"\r\n\r\nimport whaleSightingsMap from \"../images/whaleSightingsMap.png\"\r\nimport whosOnWhat from \"../images/whosOnWhat.jpg\"\r\nimport codePenProjects from \"../images/codePenProjects.jpg\"\r\n\r\nconst Projects = () => (\r\n  <>\r\n    <SEO title=\"Projects\" />\r\n    <main id=\"projects-main\">\r\n    <h1 id=\"projects-title\">Projects</h1>\r\n      <div class=\"project\">\r\n        <h2>Whale-Sightings-Map</h2>\r\n        <img src={whaleSightingsMap} alt=\"project-img\" />\r\n        <h3>Description:</h3>\r\n        <p>\r\n          This is a map of recent whale sightings in the Seattle Area. It's was built with React.js, Google Maps API,\r\n          and\r\n          google-map-react. Whale sightings data was provided by The Whale Museum's API. The project is not live yet\r\n          but\r\n            the code is posted on Github and can be viewed <a href=\"https://github.com/AndrewZamora/Whale-Sightings-Map\"\r\n            target=\"_blank\" rel=\"noopener noreferrer\">here</a>.\r\n        </p>\r\n      </div>\r\n      <div class=\"project\">\r\n        <h2>Who's On What?</h2>\r\n        <img src={whosOnWhat} alt=\"project-img\" />\r\n        <h3>Description:</h3>\r\n        <p>\r\n          Who's On What? is a web app that takes a picture of a celebrity, identifies them, and lists the movies\r\n            where they have appeared. This web app is live <a href=\"https://whosonwhat.netlify.com/\" target=\"_blank\" rel=\"noopener noreferrer\">here </a>\r\n          and its code can be viewed on <a href=\"https://github.com/AndrewZamora/Whos-On-What\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a>.\r\n        </p>\r\n      </div>\r\n      <div class=\"project\">\r\n        <h2>CodePen Projects</h2>\r\n        <img src={codePenProjects} alt=\"project-img\" />\r\n        <h3>Description:</h3>\r\n        <p>\r\n          I'm also very active on CodePen.io where I like to create mini web projects. You can view my profile\r\n            <a href=\"https://codepen.io/Supra_01/\" target=\"_blank\" rel=\"noopener noreferrer\"> here</a>.\r\n        </p>\r\n      </div>\r\n      <Link to=\"/\" id=\"project-back-button\">Back</Link>\r\n    </main>\r\n  </>\r\n)\r\n\r\nexport default Projects\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","module.exports = __webpack_public_path__ + \"static/whaleSightingsMap-13cbbeda9abeb2e305d9983b7656273b.png\";","module.exports = __webpack_public_path__ + \"static/whosOnWhat-2d32eab811a3158a815a7298347f122e.jpg\";","module.exports = __webpack_public_path__ + \"static/codePenProjects-bcc542e5a78644b5a008f761180d814a.jpg\";"],"sourceRoot":""}